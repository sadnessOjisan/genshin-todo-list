---
import type { Vocabulary } from "../data/todo";

export interface Props {
  lang: string;
  data: Vocabulary;
}

const { lang, data } = Astro.props as Props; // FIXME: without `as`, it fails typing.
---

<div>
  <h2>daily</h2>
  {lang}
  <label for="jushi">{data.jushi}</label>
  <input id="jushi" type="checkbox" />
  <label for="mission1">{data.mission1}</label>
  <input id="mission1" type="checkbox" />
  <h2>weekly</h2>
  <label for="weekly_boss1">{data.weekly_boss1}</label>
  <input id="weekly_boss1" type="checkbox" />
  <label for="weekly_boss2">{data.weekly_boss2}</label>
  <input id="weekly_boss2" type="checkbox" />
  <label for="weekly_boss3">{data.weekly_boss3}</label>
  <input id="weekly_boss3" type="checkbox" />
</div>
<style>
  .link-card {
    list-style: none;
    display: flex;
    padding: 0.25rem;
    background-color: white;
    background-image: none;
    background-size: 400%;
    border-radius: 0.6rem;
    background-position: 100%;
    transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
      0 2px 4px -2px rgba(0, 0, 0, 0.1);
  }

  .link-card > a {
    width: 100%;
    text-decoration: none;
    line-height: 1.4;
    padding: 1rem 1.3rem;
    border-radius: 0.35rem;
    color: #111;
    background-color: white;
    opacity: 0.8;
  }
  h2 {
    margin: 0;
    font-size: 1.25rem;
    transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
  }
  p {
    margin-top: 0.5rem;
    margin-bottom: 0;
    color: #444;
  }
  .link-card:is(:hover, :focus-within) {
    background-position: 0;
    background-image: var(--accent-gradient);
  }
  .link-card:is(:hover, :focus-within) h2 {
    color: rgb(var(--accent));
  }
</style>
